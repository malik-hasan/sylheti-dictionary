IMPORT kotlin.Boolean;

CREATE TABLE IF NOT EXISTS DictionaryEntry (
    entryId TEXT PRIMARY KEY NOT NULL,
    lexemeIPA TEXT NOT NULL,
    lexemeBengali TEXT,
    lexemeNagri TEXT,
    citationIPA TEXT,
    citationBengali TEXT,
    citationNagri TEXT,
    senseId TEXT UNIQUE,
    partOfSpeech TEXT,
    gloss TEXT,
    definitionEN TEXT,
    definitionBN TEXT,
    definitionBNIPA TEXT,
    definitionIPA TEXT,
    definitionNagri TEXT
);

CREATE TABLE IF NOT EXISTS EntryCrossRef (
    senseId1 TEXT NOT NULL,
    senseId2 TEXT NOT NULL,
    relationType1 TEXT NOT NULL,
    relationType2 TEXT NOT NULL,
    FOREIGN KEY (senseId1) REFERENCES DictionaryEntry(senseId),
    FOREIGN KEY (senseId2) REFERENCES DictionaryEntry(senseId),
    PRIMARY KEY (senseId1, senseId2),
    CHECK (senseId1 < senseId2)
);

CREATE TABLE IF NOT EXISTS Example (
    id INTEGER PRIMARY KEY,
    entryId TEXT NOT NULL,
    exampleIPA TEXT,
    exampleBengali TEXT,
    exampleNagri TEXT,
    exampleEN TEXT,
    exampleBN TEXT,
    exampleBNIPA TEXT,
    FOREIGN KEY (entryId) REFERENCES DictionaryEntry(entryId)
);

CREATE INDEX IF NOT EXISTS idx_Example_entryId ON Example(entryId);

CREATE TABLE IF NOT EXISTS Variant (
    id INTEGER PRIMARY KEY,
    entryId TEXT NOT NULL,
    variantIPA TEXT NOT NULL,
    variantBengali TEXT,
    variantNagri TEXT,
    environment TEXT,
    FOREIGN KEY (entryId) REFERENCES DictionaryEntry(entryId)
);

CREATE TABLE IF NOT EXISTS ComponentLexeme (
    id INTEGER PRIMARY KEY,
    entryId TEXT NOT NULL,
    componentId TEXT NOT NULL,
    isPrimary INTEGER AS Boolean NOT NULL,
    complexFormType TEXT,
    variantType TEXT,
    FOREIGN KEY (entryId) REFERENCES DictionaryEntry(entryId),
    FOREIGN KEY (componentId) REFERENCES DictionaryEntry(entryId)
);

CREATE INDEX IF NOT EXISTS idx_ComponentLexeme_entryId ON ComponentLexeme(entryId, componentId);

getEntry:
SELECT * FROM DictionaryEntry
WHERE entryId = :entryId;

getEntries:
SELECT * FROM DictionaryEntry
WHERE entryId IN :entryIds;

searchAllEntries:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery;

searchAllEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery
    OR definitionIPA GLOB :simpleQuery
    OR definitionBN GLOB :simpleQuery
    OR definitionNagri GLOB :simpleQuery;

searchAllEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR exampleIPA GLOB :simpleQuery
    OR exampleBengali GLOB :simpleQuery
    OR exampleNagri GLOB :simpleQuery
    OR exampleEN GLOB :simpleQuery
    OR exampleBN GLOB :simpleQuery;

searchAllEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery
    OR definitionIPA GLOB :simpleQuery
    OR definitionBN GLOB :simpleQuery
    OR definitionNagri GLOB :simpleQuery
    OR exampleIPA GLOB :simpleQuery
    OR exampleBengali GLOB :simpleQuery
    OR exampleNagri GLOB :simpleQuery
    OR exampleEN GLOB :simpleQuery
    OR exampleBN GLOB :simpleQuery;

searchEnglishEntries:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery;

searchEnglishEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery;

searchEnglishEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR exampleEN GLOB :simpleQuery;

searchEnglishEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery
    OR exampleEN GLOB :simpleQuery;

searchSylhetiLatinEntries:
SELECT * FROM DictionaryEntry
WHERE lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery;

searchSylhetiLatinEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR definitionIPA GLOB :simpleQuery;

searchSylhetiLatinEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR exampleIPA GLOB :simpleQuery;

searchSylhetiLatinEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR definitionIPA GLOB :simpleQuery
    OR exampleIPA GLOB :simpleQuery;

searchLatinEntries:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery;

searchLatinEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery
    OR definitionIPA GLOB :simpleQuery;

searchLatinEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR exampleEN GLOB :simpleQuery
    OR exampleIPA GLOB :simpleQuery;

searchLatinEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE gloss GLOB :positionedQuery
    OR lexemeIPA GLOB :positionedQuery
    OR citationIPA GLOB :positionedQuery
    OR definitionEN GLOB :simpleQuery
    OR definitionIPA GLOB :simpleQuery
    OR exampleEN GLOB :simpleQuery
    OR exampleIPA GLOB :simpleQuery;

searchBengaliEasternNagriDefinitions:
SELECT * FROM DictionaryEntry
WHERE definitionBN GLOB :simpleQuery;

searchBengaliEasternNagriDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE definitionBN GLOB :simpleQuery
    OR exampleBN GLOB :simpleQuery;

searchSylhetiEasternNagriEntries:
SELECT * FROM DictionaryEntry
WHERE lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery;

searchSylhetiEasternNagriEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR exampleBengali GLOB :simpleQuery;

searchEasternNagriEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR definitionBN GLOB :simpleQuery;

searchEasternNagriEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR exampleBengali GLOB :simpleQuery
    OR exampleBN GLOB :simpleQuery;

searchEasternNagriEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeBengali GLOB :positionedQuery
    OR citationBengali GLOB :positionedQuery
    OR definitionBN GLOB :simpleQuery
    OR exampleBengali GLOB :simpleQuery
    OR exampleBN GLOB :simpleQuery;

searchSylhetiNagriEntries:
SELECT * FROM DictionaryEntry
WHERE lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery;

searchSylhetiNagriEntriesWithDefinitions:
SELECT * FROM DictionaryEntry
WHERE lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR definitionNagri GLOB :simpleQuery;

searchSylhetiNagriEntriesWithExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR exampleNagri GLOB :simpleQuery;

searchSylhetiNagriEntriesWithDefinitionsAndExamples:
SELECT D.* FROM DictionaryEntry D
JOIN Example USING(entryId)
WHERE lexemeNagri GLOB :positionedQuery
    OR citationNagri GLOB :positionedQuery
    OR definitionNagri GLOB :simpleQuery
    OR exampleNagri GLOB :simpleQuery;

getExamples:
SELECT * FROM Example
WHERE entryId = :entryId;

getVariants:
SELECT * FROM Variant
WHERE entryId = :entryId;

getAdditionalVariants:
SELECT D.entryId, citationIPA, lexemeIPA, citationBengali, lexemeBengali, citationNagri, lexemeNagri, variantType
FROM DictionaryEntry D
JOIN ComponentLexeme CL USING(entryId)
WHERE CL.componentId = :entryId
    AND variantType IS NOT NULL;

variantEntry:
SELECT D.*, variantType FROM DictionaryEntry D
JOIN ComponentLexeme CL ON D.entryId = CL.componentId
WHERE CL.entryId = :entryId
    AND variantType IS NOT NULL;

componentEntry:
SELECT D.*, complexFormType FROM DictionaryEntry D
JOIN ComponentLexeme CL ON D.entryId = CL.componentId
WHERE CL.entryId = :entryId
    AND complexFormType IS NOT NULL;

relatedEntry:
SELECT D.*,
    CASE
        WHEN EE.senseId1 = :senseId THEN EE.relationType1
        ELSE EE.relationType2
    END AS relationType
FROM DictionaryEntry D
JOIN EntryCrossRef EE ON D.senseId = EE.senseId1
    OR D.senseId = EE.senseId2
WHERE (EE.senseId1 = :senseId OR EE.senseId2 = :senseId)
    AND D.senseId != :senseId;
